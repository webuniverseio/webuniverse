{
  "name": "simple-installer",
  "version": "1.1.0",
  "description": "Download and/or install programs in similar manner to chocolatey or similar installation managers.",
  "keywords": [
    "program",
    "install",
    "installer",
    "download",
    "dependencies",
    "chocolatey"
  ],
  "homepage": "https://github.com/szarouski/SimpleInstaller",
  "bugs": {
    "url": "https://github.com/szarouski/SimpleInstaller/issues",
    "email": "sergey@webuniverse.io"
  },
  "license": "Unlicense",
  "author": {
    "name": "Sergey Zarouski",
    "email": "sergey@webuniverse.io",
    "url": "http://webuniverse.io/"
  },
  "main": "src/SimpleInstaller.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/szarouski/SimpleInstaller.git"
  },
  "scripts": {
    "test": "node --harmony node_modules/istanbul-harmony/lib/cli.js cover node_modules/mocha/bin/_mocha -- -R spec tests/**/*Test.js"
  },
  "dependencies": {
    "co": "^4.5.1",
    "colors": "^1.0.3",
    "request": "^2.54.0",
    "shelljs": "^0.4.0"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.1",
    "grunt-githooks": "^0.3.1",
    "istanbul-harmony": "^0.3.12",
    "lodash": "^3.6.0",
    "mocha": "^2.2.1",
    "should": "^5.2.0"
  },
  "engines": {
    "node": ">=0.11.6"
  },
  "gitHead": "8c70418b76fa984eb614d23287ec3ea09662a237",
  "readme": "# Simple installer\n\nDownload and/or install programs in similar manner to chocolatey or similar installation managers.\n- crossplatform (tested on windows and debian)\n- downloads files (optional) and runs commands\n- skips already installed programs\n- could be used as a simple task runner\n- could work as a downloader\n- simple and because of that flexible and expendable api\n- tested with 100% coverage\n- uses harmony mode for generators and `npm co` to manage execution flow\n\nLicense\n- http://unlicense.org/\n\n##Tests:\n\nTo launch tests you have to run `npm install` then `npm test` or if you prefer `grunt test`.\n\nIf you want to contribute make sure to run `grunt githooks` first thing after clone. \nIt will create pre-commit hook and run tests and jshint before you commit. \nPlease use git flow - create a feature branch for your feature and send a pull request to dev.\n\n##API:\n\nSimpleInstaller exports a constructor, which takes and object with following properties:\n- `link :string` - (optional) url to installer/executable or any other resource\n- `name :string` - used for progress reporting and for installation process, see `installProgram` for details\n- `prefix :string` - (optional) used for installation process, prepends part of command to `name`, see `installProgram` for details\n- `postfix :string` - (optional) used for installation process, appends part of command to `name`, see `installProgram` for details\n- `update :generator function` - (optional) if program is already installed it runs user code for an update\n- `tempFolder :string` - (optional) overwrites `SimpleInstaller.tempFolder`\n- `installMessage :string` - (optional) used for progress reporting, overwrites default string `'installing ' + info.name`\n\nConstructor has following static properties:\n- `tempFolder :string` - defaults to \"temp\", all downloads will be placed here\n\nConstructor has following prototype methods:\n- `run :generator function` - first it runs `isInstalled`, if result is successful it runs `chooseInstallProcess`, otherwise it runs `runUpdateIfExists`\n- `isInstalled :function` - uses crossplatform version of `which` verifying that `info.name` exists in your path\n- `runUpdateIfExists :generator function` - if `info.update` exists, it will run it. `this` is referring to `info` object\n- `chooseInstallProcess :generator function` - if `info.link` wasn't specified it runs `installProgram`, else it runs `downloadAndInstall`\n- `downloadAndInstall :generator function` - downloads `info.link` and runs `installProgram`\n- `installProgram :function` - concatenates `info.prefix`, `info.name` and `info.postfix` and runs results as a command line\n\n##Examples:\n\n```js\n//following will install git on windows using git.inf if git.exe doesn't exist in your path\nvar co = require('co');\nvar SimpleInstaller = require('simple-installer');\n\nco(function* () {\n    yield new SimpleInstaller({\n        link: 'http://github.com/msysgit/msysgit/releases/download/' +\n        'Git-1.9.4-preview20140929/Git-1.9.4-preview20140929.exe',\n        name: 'git.exe',\n        postfix: ' /DIR=\"c:\\\\Git\" /VERYSILENT /NORESTART /NOCANCEL /SP- /CLOSEAPPLICATIONS /RESTARTAPPLICATIONS /NOICONS ' +\n        '/COMPONENTS=\"icons,ext\\\\reg\\\\shellhere,assoc,assoc_sh\" /LOADINF=\"git.inf\"'\n    }).run();\n});\n\n//same example for debian\nvar co = require('co');\nvar SimpleInstaller = require('simple-installer');\n\nco(function* () {\n    yield new SimpleInstaller({\n        prefix: 'apt-get install ',\n        name: 'git'\n    }).run();\n});\n```\nFor advanced usage (batch install, update, ...) check `example` folder.\n",
  "readmeFilename": "README.md",
  "_id": "simple-installer@1.1.0",
  "_shasum": "728528bc1a75afbf7b7aa0e5e683cddc8c7749d8",
  "_from": "C:\\Users\\Sergey\\AppData\\Local\\Temp\\npm-3456-8324ce4e\\git-cache-4be74af4936a\\8c70418b76fa984eb614d23287ec3ea09662a237",
  "_resolved": "git+https://github.com/szarouski/SimpleInstaller#8c70418b76fa984eb614d23287ec3ea09662a237"
}
