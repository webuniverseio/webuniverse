{"data":{"mdx":{"fileAbsolutePath":"/app/src/content/projects/index.mdx","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Quick overview of projects I've had a wonderful time working on...`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"https://github.com/szarouski/SimpleInstaller\"\n      }\n    }, `SimpleInstaller`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Download and/or install programs in similar manner to chocolatey or similar installation managers.`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `crossplatform (tested on windows and debian)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `downloads files (optional) and runs commands`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `skips already installed programs`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `could be used as a simple task runner`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `could work as a downloader`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `simple and because of that flexible and expendable api`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `tested with 100% coverage`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `uses harmony mode for generators and `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `npm co`), ` to manage execution flow`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"https://github.com/szarouski/sandbox\"\n      }\n    }, `Sandbox`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This little library was designed for modular architectures (`, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.youtube.com/watch?v=b5pFv9NB9fs\"\n      }\n    }, `1`), `, `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://www.addyosmani.com/scalablejs/\"\n      }\n    }, `2`), `) to unify API between stand alone modules. It is crossbrowser and crossplatform with 100% coverage.\nThere are a few simple requirements for it to work effectively:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `your modules should never auto-initialize as they are loading`, React.createElement(\"small\", null, \"Doing this will make sure that your code doesn't depend on the order in which your modules are loading  and you can get a benefit of `'async'` attribute that way, which can increase performance by an order of magnitude.\")), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `there always should be an initialization method`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `you initialize a new instance of sandbox and pass it into initialization calls of your modules`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `List of benefits you'll get from using sandbox:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `unified module initialization api`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Sandbox supports publish/subscribe pattern, and provides additional methods to control permissions for message delivery. So you can control whether one module can communicate with a sibling module, with a sub-module or even with the core`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Sandbox has various caching strategies which will help to deal with asynchronous nature of AMD or ES6 modules`, React.createElement(\"small\", null, \"That way you really stop caring about order in which your modules are initialized, you can always cache events from one module and do lazy initialization when another module loads\")), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `data, passed through Sandbox will become immutable, meaning that you can safely pass objects without fear that one of the modules can modify 'shared' state`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"https://github.com/szarouski/lodash.dom-traverse\"\n      }\n    }, `Lodash traverse`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Native browser support allows you to traverse and select DOM using `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `'querySelector'`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `'insertAdjacentHTML'`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `'parent'`), `, and other API methods. But there are a few cases when it is not flexible/compatible enough and that is why jQuery is around. Lodash traverse is a tiny addon which provides a dozen of useful, chainable methods which in addition to native APIs give you minimalistic, yet ultimate control over your html. In combination with other `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://microjs.com/\"\n      }\n    }, `micro libraries`), ` you can assemble a highly customizable and slim in size library for your favorite projects.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"https://github.com/szarouski/simple-permissions\"\n      }\n    }, `Simple permissions`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Nothing crazy, just a small library which allows you to add or remove multiple permissions for multiple targets. Crossbrowser and crossplatform with 100% coverage.`));\n  }\n\n}"},"frontmatter":{"title":"Projects","image":{"publicURL":"/static/image-3d30ded107af12d2ea95d19dfbe0b723.jpg"},"imageSmall":{"publicURL":"/static/imageSmall-653d03f64c0167e4763cd5b803e8124a.jpg"},"overview":"Wonderful open source projects to ease your development life","copyright":null,"date":"2015-01-19T20:36:14.000Z","dateFormatted":"19 January, 2015"},"fields":{"slug":"/projects/"}}},"pageContext":{"slug":"/projects/"}}